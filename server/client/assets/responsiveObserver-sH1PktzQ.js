import{aG as e,ah as s}from"./index-BhmypF9s.js";const r=["xxl","xl","lg","md","sm","xs"];function t(){const[,t]=e(),n=(e=>({xs:`(max-width: ${e.screenXSMax}px)`,sm:`(min-width: ${e.screenSM}px)`,md:`(min-width: ${e.screenMD}px)`,lg:`(min-width: ${e.screenLG}px)`,xl:`(min-width: ${e.screenXL}px)`,xxl:`(min-width: ${e.screenXXL}px)`}))((e=>{const s=e,t=[].concat(r).reverse();return t.forEach(((e,r)=>{const n=e.toUpperCase(),i=`screen${n}Min`,c=`screen${n}`;if(!(s[i]<=s[c]))throw new Error(`${i}<=${c} fails : !(${s[i]}<=${s[c]})`);if(r<t.length-1){const e=`screen${n}Max`;if(!(s[c]<=s[e]))throw new Error(`${c}<=${e} fails : !(${s[c]}<=${s[e]})`);const i=`screen${t[r+1].toUpperCase()}Min`;if(!(s[e]<=s[i]))throw new Error(`${e}<=${i} fails : !(${s[e]}<=${s[i]})`)}})),e})(t));return s.useMemo((()=>{const e=new Map;let s=-1,r={};return{matchHandlers:{},dispatch:s=>(r=s,e.forEach((e=>e(r))),e.size>=1),subscribe(t){return e.size||this.register(),s+=1,e.set(s,t),t(r),s},unsubscribe(s){e.delete(s),e.size||this.unregister()},unregister(){Object.keys(n).forEach((e=>{const s=n[e],r=this.matchHandlers[s];null==r||r.mql.removeListener(null==r?void 0:r.listener)})),e.clear()},register(){Object.keys(n).forEach((e=>{const s=n[e],t=s=>{let{matches:t}=s;this.dispatch(Object.assign(Object.assign({},r),{[e]:t}))},i=window.matchMedia(s);i.addListener(t),this.matchHandlers[s]={mql:i,listener:t},t(i)}))},responsiveMap:n}}),[t])}export{r,t as u};
